다익스트라 알고리즘을 구현할 때 자바에서 주의할 점

1. (노드, 간선) 클래스를 구현할 시 Comparable<클래스 이름> 식으로 상속을 받아야 한다.

이유 : 정렬 규칙을 정해주어야 하기 때문, 왜 정렬 규칙을 정해주어야 하는가?
-> 우선순위 큐를 사용할 때, 가장 작은 조건을 내보내야 한다.(즉, 우선순위가 결국 간선의 길이가 가장 작은 것이 우선이 되어야한다.)
-> 그렇게 해야지만 우선순위 큐의 우선순위가 정해지므로, 이를 정렬할 수 있는 조건이 필요하게 되는 것이라고 생각함.
(CompareTo 에서 간선의 길이에 따라서 우선 순위를 주는 방식을 채택한 것이 아마 이 이유 때문일 것)

2. ArrayList 선언이 ArrayList<ArrayList<Node>>와 같은 식으로 선언해야 한다.

이유 -> 단순 index로 그 모든 값을 불러올 수 있는? 함수가 없다고 판단하고,
ArrayList를 한번 더 선언함으로써 2차원 배열 형식의 형태를 띄게끔 만드는 것이다.
즉, ArrayList[1] 에 ArrayList<Node> 에 대한 정보를 넣어두는 것이다
이렇게 되면 1번 노드에 대한 ArrayList들이 연결되어있는 구조이므로, 이 안에는 이제 Node들이 들어가게 되는 것이다
약간 { {1,{new Node(x,y)} } 같은 개념이라고 생각하면 될거 같다.

3. 왜 굳이 Offer 여야 하는가?
이건 잘 모르겠음. -> 상관없음. add나 offer 중에서 예외를 리턴해야 되는 경우만 add를 사용하고, 그냥 false값이 필요하면
offer를 쓰면 될 거 같음.

이정도가 그나마 궁금한 점 인듯.

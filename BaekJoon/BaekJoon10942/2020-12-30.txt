7785 회사에 있는 사람

단순하게 enter과 leave를 구분하여 사전 역순으로 출력하는 프로그램을 만들어라
일단 총 출입 개수(N)은 최대 100만이므로 for문 1번정도는 돌리는 것이 가능
자료 구조 중 사용할만 한 것이 있는가

일단 완전 탐색으로 구현한 코드는 시간 초과가 났음
그럼 이제 이 탐색 시간을 줄여야 하는데
정확하게는 100만 정도기 때문에 for문은 크게 상관이 없다고 생각한다.
ArrayList를 활용하여 String을 넣고, remove하는 시간을 잡았는데
그것이 아니라면...

일단 처음에 접근했던 Hash 집합 관련이라서 Hash가 맞긴 한데
얘가 enter key값이 중복으로 들어오면 기존 값을 지워서...
그래서 name을 key값으로 삼기에는 key 값을 return 시켜줄 수 있는 것이 없음.
일단 맞긴 맞았는데, 왜 맞았는지는... 잘 모르겠다는 느낌...?
Hashmap의 장점을 잘 살리지 못한 것 같아서, 좀 더 공부를 해봐야 알 것 같음.
visited에 대해서 key값에 대해서 삽입 삭제를 name으로 하는 것과 reverseorder 활용 같은건
그냥 뭐 그랬던거 같은데... 정확한 답은 아니다라는 느낌이 듬.

그리고 HashSet을 이용해서 그냥 add,remove 해봤는데 시간은 더 들고 메모리는 줌
메모리 줄어들은건 그냥 Map에서 저장을 안해서 그런 거 같고
흠... 좀 더 공부를 해봅시다.

----------------------------------------------------------------------------------------

10942번 팰린드롬?

일단 완전탐색을 통해서 StringBuilder를 활용하여 reverse와 org가 같으면 1, 아니면 0을 내세움
그러나 실제 질문이 100만개가 된다는 점과, 10만 길이의 String을 모두 탐색한다는 것은 시간 초과가 나기에는
충분한 상황(거기다 0.5초임 ㅎㅎ)
그럼, 어떻게 해야하나?
일단, logN으로 나타낼 수 있는 알고리즘은 없었다.
그래서 검색을 해보니깐 DP를 활용해서 풀더라. 즉, x~y지점 까지의 팰린드롭이 맞는지를 먼저 구하고,
양 끝만 같게 된다면 결국 팰린드롭이므로, 이를 활용하여 문제를 구하는 것이다.
이렇게 최대 2000길이의 수열에 대한 팰린드롭을 미리 구해두면
각 답마다는 그냥 미리 구해놓은 것에 대해서 값만 표시해주면 되는 것이기 때문에
아주 간단한(사실 아닌) 문제가 되는 것이다. 팰린드롭 알고리즘은 특정하게 판단할 수 있는 알고리즘이 하나 더 있던데
그것도 DP를 일부 활용하는 것이라고 하니, 팰린드롭 같은 특수한 알고리즘은 외워둘 수 있으면 좋겠다.


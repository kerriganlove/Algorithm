10816번 숫자 카드 2

간단하게 푸는 방법은 list에 숫자 카드가 중복되는 만큼 ++를 반복하면 되는 것.
그럼 N, M은 50만이기 때문에 단순히 list 값을 바꾸는건 시간이 오래 걸리지 않기 때문에
O(N+M) 이면 시간이 1초 미만일 것이라고 생각했다. 이게 제일 간단한 방법 같은데...

정석은 이분 탐색을 통해서 한다. 즉, 정렬 후 input 값을 넣으면 list를 이분 탐색으로 탐색하면서 count를 return 시키는 방식을 
취하려고 하는 것 같다. 예전이라면 이런 방법을 정석이라 판단하고 연구를 했겠지만
이게 더 간단하게 구현할 수 있는 방법이 있는데 굳이 그렇게 하지 않아도 됬을 것 같다. 
만약 N,M이 더 커질 경우는 이분 탐색을 써야겠다! 라는 생각을 가지고 있으면 될 것 같다.

9012번 괄호

정석적인 방법은 ( 를 Stack에 집어넣고, )이 나올 때마다 pop을 하고 Stack에 (가 남아있거나, Stack이 비었어도 )이 남아있다면
VPS가 아니게 되는 것이다. 솔직히 개수로만 정했을 때는 )( 과 같은 상황이 나오게 되므로 안되기 때문에 갯수로만 판단할 순 없겠다.

정답이었다. 정석적인 방법에서 조금 더 생각한 건, '('의 개수 < ')'의 개수일 때의 문제였다.
그래서 ) 이 나왔을 때 스택이 비었다면 이는 짝을 지을 수 없다는 의미가 되므로 No을 출력시키게 끔 했다.
쉽게 풀었던 것 같다. 이런 정도의 아이디어가 골드 난이도에서도 나온다면... 개굿일듯?
13460 구슬탈출 2

BFS를 통해서 풀 수 있는 문제인데, 파란색의 BFS가 거슬린다.
빨간색이 항상 먼저 빠져야하며, 동시 혹은 파란색이 먼저 빠지는 일이 없어야 한다.

이러면 빨간색의 Queue와 파란색의 Queue를 동시에 이용하고,
구멍이 나오면 현재의 Count를 return하는 방식으로 하면 될까?

BFS를 이용해서 최단경로를 구하는데, 파란 구슬을 넣는 것 또한 구해야하냐
구하기는 해야하는데, 그 때 Red가 들어가있지 않는 상태라면, 정답으로 인정해야하나.
그걸 visited로 커버할 수 있느냐.

아니면 reaQue에서만 먼저 최단 경로를 파악한 뒤에
이 경로를 그대로 blueQue에 적용시켜서, 만약 blue가 먼저 빠지면
새로운 경로를 찾는 방식은 어떠한가?

결국 답은 빨간 구슬의 경로 크기 < 파란 구슬의 경로 크기
일 때만 답이 나오거나, 혹은 빨간 구슬의 경로의 크기가 10 초과일 경우 -1
딱 이 2개가 답이 나올 수 있는 경우인데.

그렇게 되면 결국 이 경로는 같이 움직여야한다.

아니면, 도착점을 중심으로 경로를 구하는 방법은?
이건 별론가...? 왜냐하면 두개가 동시에 움직이고, 못 움직이는 경우도 있기 때문에
단순히 단순 최단경로만 구하게 되면, 그 경로에 대한 파란 구슬의 움직임도 알아야 함.

씁... 일단 동시에 가는 부분은 맞고, 맨 처음 생각했을 때 간과한 부분은 한칸씩 이동하는게 아니라
기울이기 때문에 벽을 만나기 전까지는 계속 한쪽을 향해 간다는 점이다.

이 간과한 점을 한 번 떠오르고, 문제를 보고 해도 제대로 이해는 안되서, 일단 도움을 받았음.
결국 2개의 점을 동시에 이동시키는 아이디어는 맞음.
그 대신, 여러가지 조건을 만족시켜줘야함.

1. 두개가 동시에 이동했을 때, 만약 같은 지점에 있게 되면, 누구를 뺄 것인가.
2. 중간에 구멍을 만났을 경우는 어떻게 할 것인가.
등등...

BFS는 최단 경로를 구하는 과정이기 때문에, 만약 빨간구슬과 파란구슬의 위치가 겹쳐지지 않는 상태에서
빨간 구슬이 구멍에 들어가게 되면 break를 해버린다.

1. 두 개가 동시에 왼쪽으로 쏠려 한 벽에 둘 다 부딪혔다고 가정했을 때,
먼저 도달한건 거기까지 가는 거리가 짧은 애이다. 그래서 이동시 빨간, 파란 구슬이 이동한 거리를 파악해서,
둘이 같은 위치일 때, 거리의 차이를 이용해서 늦게 온 애가 한발 더 물러날 수 있도록 했다.

2. 중간에 구멍을 만났을 경우는 그냥 그 위치로 이동하는 과정에서
벽이라면 한칸 물러서고, 구멍이라면 그 칸 그대로 rx, ry, bx,by를 고정시키도록 만들었다.

visited에 대한 고민은 4차원 배열로 전부 해결을 하였고, rx,ry의 위치에 따라 bx,by의 위치는 전에 있떤 bx,by의 위치가 아닌 이상
있어도 상관이 없으므로, 4차원 배열을 통해서 visited를 해결한 것 같다.(메모리가 큰 것 또한 판단 요소 중 하나.)

10 by 10이므로 매우 여유가 있었던 2초의 시간이었고,
만약 BFS로 풀지 않았어도, 완전탐색을 통해서 풀어도 시간이 넘어가지는 않았을 것 같다.
브루탈포스로 풀 되, DFS를 이용해서 back-tracking을 하는 정도도 나쁘진 않을 것 같다. 물론 해봐야 알겠지만.

----------------------------------------------------------------------------------------------------------------------

13458번 시험 감독

매우 쉬운 문제인데, 왜 이렇게 많이 틀렸는지를 모르겠는 문제.
물론 나도 한 번 틀림.

N개의 시험장에 수용 인원이 있고, 그 수용 인원을 Ni 라고 하자.
수용 인원이 전부 다 찼을 때, 총감독관이 볼 수 있는 인원 b, 부감독관이 볼 수 있는 인원이 c라고 하면
답은 Ni = (Ni-b)/c + (Ni-b)%c 인데, 여기서 모듈러 연산은 0이거나 아닐때를 기준으로 할 수 있다.
처음에는 그냥 모듈러 연산을 통해서 소수를 구한 뒤 0이 아니면 +1을 할려고 했는데
부동소수점 같은 이슈가 생길 거 같아서 그냥 이렇게 품
(Ni-b)-((NI-b)/c * c)의 식으로 풀었고, 이 식은 나머지가 있냐 없냐에 따라서 0 or 0보다 커질 수 있기 때문에
0보다 커지면 부감독관 1명을 추가하고, 0이면 그대로 가는 식으로 했다.
그리고 마지막으로
시험장이 총 백만개, 수용 인원이 전부 백만개라고 했을 때, 이를 int형으로는 받아들일 수 없는 숫자가 되므로
int형이 아닌 long을 사용하여 답을 받아내주는 것으로 마무리했다.

첫 실수는 int를 사용한 것이고, 계산하자마자 바로 long으로 대체해주었다.


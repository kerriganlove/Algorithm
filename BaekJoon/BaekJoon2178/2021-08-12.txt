2667번 단지번호붙이기

DFS를 활용해서 1이 모인 공간의 수와, 공간에 있는 1의 개수를 구하는 문제.
단순히 공간의 수를 파악하는건 DFS가 true로 넘어왔을때는 가능.
근데, 문제는 공간에 있는 1의 개수였는데, 생각해보니까, 조건을 전부 넘기게 되면
그 곳은 처음 방문하면서 1인 상황이니까, 얘만 num++시키면 되지 않을까하는 생각에 해보니깐
맞았음.
그래서 만약 DFS 함수가 참으로 넘어왔다면 num을 저장하고, num을 초기화해줘서
새롭게 숫자를 카운트할 수 있도록 하였다.
물론 이를 다시 정렬하고 이러는건 좀 깔끔하지 못한 방법을 쓰긴 했지만, 뭐... 정답만 맞으면 ㅎ

---------------------------------------------------------------------------------------------------

2178번 미로 탐색

미로의 최단 거리를 구하는 문제

BFS를 활용해서 푸는 문제. 거리를 구하는 문제라서 Queue가 생각이 났다. 아마, 다익스트라 알고리즘을 아직
대충은 기억하고 있는 듯해서 이 문제도 쉽게 풀었던 것 같다.

최단 거리는 그 점에 도착했을 때 다시 돌아가는 것 자체가 의미가 없고, 그렇게 돌아가게 두면
무한한 거리의 경로가 나올 수 있다고 판단하기 때문에 반드시 visited를 설정하여, 그 곳을 이미 방문하였다고
꼭 체크를 해두어야 한다.
그러나 의심스러운건, 만약 최단 경로가 2개라고 가정했을 때, visited를 나 같은 경우는 상,하,좌,우 중 하나라도
방문하지 않은 곳은 visited를 미리 true로 만들어두었는데, 만약, 이 경로를 같이 지나가야 하는 상황이 오면
최단 경로 1개가 없어지는 거랑 다름이 없지 않나... 그래서 만약 counting 까지 하라했다면...?

이 점은 조금 더 고민하고, 생각해봐야할 것 같은 문제다. 이는 다익스트라에서 딱 거리를 우선으로 하는 PriorityQueue가 없는
것이기 때문에, 더 고민이 되는 것 같다.

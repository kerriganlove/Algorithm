1912번 연속합

그냥 단순하게 생각했으면 되는 문제이긴 한데 조금의 이해가 필요할 것 같다.
식은 생각중에 나왔을법 한데, 정확하게 이해를 해야할 것 같다.
이게 부분합을 DP로 푸는 가장 일반적인 방법인데, 이게 어떻게 흘러가는 것이냐면
일단, 시작값과 답으로 출력할 변수를 각각 제일 앞에 있는 수로 채운다.
그 뒤, 다음 수열의 숫자부터 비교하면서, dp[i-1] + list[i]와 list[i] 중 더 큰 값을 dp[i] 값으로 삼는다.
아마 이유는, 시작점을 찾기 위해서라고 생각한다. 만약 앞에서 더해오던 값들이 dp[i]보다 작다면
굳이 앞 값을 선택할 이유 없이 시작점을 바꿔 그 곳부터 다시 더해가면 되는 것이다.
그 뒤, answer에서 현재 위치에 있는 dp 배열의 값과, answer 값을 비교한다.
이 역시 최대값을 찾아내기 위한 과정인데, 만약 앞의 값들이 list[i]보다 작아졌을 수는 있으나,
그것은 엄연히 그 전값을 더했을 때 작아졌을 수도 있으므로, 지금까지의 가장 큰 값과
비교해보면서 답을 찾아내는 것이다.

정리하자면, dp 배열의 연산과 list를 비교하는 이유는 시작점을 새로 찾기 위한 과정.
그리고 그 전에 저장해두었던 최댓값과 현재 dp의 값을 비교하면서 최댓값을 찾아내는 것이다.

DP의 기본이라고 생각하고, dp를 생각할 때, 너무나도 많은 생각을 꼬아서는 안될 거 같다.
점화식을 세워보고, 어떤 원리가 틀렸는지에 대해서 알아봐야한다. 적으면서 알 수는 있으나
원리가 헷갈려 제대로 된 개념을 세울 수 없을 수도 있으니...


--------------------------------------------------------------------------------------------------

2293번 동전 1

생각이 꼬이고 꼬여서 온 케이스 같은데
정확한 본질을 이해하지는 못한 것 같다.

결국 동전별로 dp를 만들어내는 아이디어까지는 맞았다고 볼 수 있고,
그 과정을 틀렸다고 볼 수 있는데, 1~10까지 있고,
동전이 1,2,5가 있다고 했을 때
먼저 동전 1만으로 1~10을 만들어낼 수 있는 경우의 수는
1 1 1 1 1 1 1 1 1 1 이다. (여기까지는 생각 완료)
여기서 동전 2를 추가해 1,2 2가지를 사용하여 만들어 낼 수 있는 동전의 개수는
1 2 2 3 3 4 4 5 5 6 이 된다.
왜 이렇게 될 수 있냐에 대해서 이해를 해보자면,
2원의 경우 2원 1개 혹은 1원 2개로 만들어낼 수 있다.
생각해보면, 이미 1원 2개로 만들어낼 수 있는 경우의 수는 count 되었으니,
자기 자신만 카운트를 하면 되는 방식이다.
그래서 dp[0] = 1로 만든 이유 역시, 자기 자신만으로 만들 수 있는 경우의 수를 포함하겠다는 것이다.
그 뒤 3원으로 가면, 이는 2원 1개 1원 1개, 1원 3개로 만들 수 있는데,
여기서 1원 3개는 이미 카운트가 되었고, 여기서 dp[1]이 1원을 만드는 경우의 수인데,
이는 결국 관점에서 보면 내가 2원을 1개 썼을 때 나올 수 있는 동전의 남은 양이 1이기 때문에
dp[1]만 더해주면 되는 것이다.

마지막으로 4원의 관점으로 보면, 이는 2개인데, 이미 1원 4개로 나올 수 있는 건 나왔고,
이제, 2원 2개 혹은 2원 1개와 1원 2개로 나뉘어 총 3개를 만들어 낼 수 있다라고 할 수 있다.
이는 다시 말해서, 내가 2원을 1개 사용한 다음, 남은 동전의 양인 2원을 봤을 때, 2원은 2가지의 경우로 
만들 수 있기 때문에, 2원을 하나 사용한 상태로 만들 수 있는 경우의 수를 체크한 것이다.

이런 식으로 내가 기준이 되는 동전을 1개 이미 사용했다고 가정하면, 남은 동전을 이룰 수 있는 경우의 수를
그냥 더해만 주면, 조금 쉽게 생각할 수 있지 않을까? 하는 그런 생각은 해봤는데
정확한 답이나 이해인지는 잘 모르겠고, 역시나 DP 문제는 연습을 많이 해봐야 점화식을 제대로 세울 수 있을 것 같다.



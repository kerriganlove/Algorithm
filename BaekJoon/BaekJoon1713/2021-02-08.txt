1700번 멀티탭 스케줄링

일단 아이디어 부문에서 잘못 알았던 것

1. 항상 뒤에 처리해야할 숫자가 많다고 해서 늦게 빠져야되는 것은 아니다.
왜냐하면, 바로 뒤에 처리해야할 일이 있는데도 뒤에 일이 없다고 해서 바로 빠져버리는 불상사가 나타날 수 있기 때문.

2. 그래서 경우의 수를 두었다.

1) 일단 뒤에 일을 처리하지 못하는 코드가 있다면 그것을 우선적으로 빼라.

2) 만약 그렇지 않는 경우에는 가장 뒤에 일을 하는 녀석을 먼저 빼라.
(여기서 가장 뒤란 그 콘센트가 그 턴 다음으로 가장 가깝게 일하게 되는 시간)

이 모든 것을 해결하기 위해서 나는 HashMap을 통해 Key 값을 빼야할 값, Value를 위치로 선정해서
위치를 내림차순으로 정렬한 뒤 가장 먼저 위치한 Key 값을 빼버리고 그 자리를 채웠다.
여기서, 일이 더 이상 없는 코드를 구분하기 위해서 Max 값을 0으로 삼고, 만약 한바퀴를 다 돌았는데도 여전히 0이라면, 
그 값은 더 이상 일이 없는 것이므로, 나올 수 없는 값을 줘 가장 큰 Value로 삼게 만든다.

아이디어를 내기 위해서 조건을 상세하게 살펴볼 필요가 있다고 생각한 문제.
경우의 수 아이디어는 반례 참고하다가 얻은 아이디어로 함.

-----------------------------------------------------------------------------------------------------------------------

1713번 후보 추천하기

앞 문제와 유사하다고 생각함. 어떤 제한된 공간이 있고, 그 제한된 공간에서 여러 조건들을 맞춰서 풀어가는 문제
이 때 정렬 조건이 붙게 되는 것 정도?

그래서 똑같이 count 세고, count 다 되면 사진틀과 비교해서 사진틀 중 빼야할 값을 찾아냄
여기의 경우는 추천 수가 가장 낮은 애를 1빠따로, 만약 추천 수가 같은 사람들이 있으면 들어온 순서대로 제일 먼저 들어온 애를
잘라버리는 식으로 Compare 조건을 설정해주면 된다.

첫번째에서 틀린 이유는 무작정 count를 채워넣으려고 해서 중복된 숫자가 들어갈 수 있다는 것을 인식하지 못함.
그래서 count가 되야하지 않음에도 불구하고, count가 되서 다른 사진들이 못들어오는 상황이 생겼음.

이거 제외하면 앞 문제와 많이 유사한 문제가 아닌가 싶음.







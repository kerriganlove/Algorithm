14502번 연구소

완전탐색 + DFS를 통해서 벽을 세워놓고, 1부터 계속 탐방을 이어나가는 방식이면 될까?

그런데 벽의 경우의 수를 어떻게 잴껀데?
0인 곳에 벽을 세우는데, 벽을 하나 세워두고 하나 세우고, 하나 세우면

n(n-1)(n-2) 일텐데 개수가 크지 않긴 해도
흠, 조합의 형태로 잡으면 경우의 수가 줄어들기는 함.

이렇게하면 딱 맞을 것 같은데
map이 계속 변화하는 것 때문에
조금 거슬리기도 함.

순서가

기존 맵에 경우의 수만큼 벽 추가 -> 그에 대한 바이러스를 중심으로 DFS를 돌려서 개수를 return
-> 맵 초기화

와 같은 방식으로 풀 수 있는데, 사실 풀려고 하면 BFS를 활용해서 풀 수도 있지는 않을까
바이러스를 전부 넣어놓고, 벽을 세우면서, 벽에 대한 Count를 해보는 거지.
벽의 개수가 남아있다면, 그 자리에 벽을 세우면서 

그냥 완전탐색일까?
그렇다. 근데 벽을 세우는 방법에 대해서는 도저히 모르겠어서 참고를 했다.
BFS or DFS를 돌리기 전, 벽을 세우는 재귀함수를 하나 만든다.
이 재귀함수는 전체를 순회하면서 0인 곳에 벽을 랜덤하게 세우고,
벽이 3개 다 세워진다면 순회를 하는 방식인 것이다.

DFS는 왜 안썼냐면... 그냥... 뭔가 BFS가 더 편하고
DFS는 Back-tracking 정도만 아니면 거리나 공간 탐색을 할 때는 BFS를 오히려 더 많이 쓰는 것 같다.

여튼 정확한 방법은 다음과 같은데
여기서 맵을 2번이나 복사하는 행위를 하게 되는데,
1. 완전한 map을 깨버리면, 답이 다르게 나오므로 temp에 복사
2. temp에 벽이 한 번 복사된 뒤, 만약 그 맵이 이미 바이러스에 지배당할 수 있으므로 다시 bfsCopy에 복사

그래서 시간이 많이 걸리지만, 2초, 512MB, 그리고 여유있게 할 수 있는 공간들까지.
단순하게 생각하기는 쉽지만, Wall을 세우는 재귀함수 같은건 센스의 영역.
이런 부분을 잘 익혀두면 나머지는 그냥 활용이기 때문에 문제를 풀 때 꼭 할 것.

------------------------------------------------------------------------------------------------

14503 로봇 청소기

BFS로 풀면 될 거고, 시작점을 Que에 넣고, 그 부분을 청소했다고 하자.
바라보고 있는 방향별로 switch case를 주고, 다시 원래의 방향을 봤을 때,
그러니까 원래 바라보고 있던 방향마저 틀렸다는 걸 알았을 때는
그 방향을 유지한 채로 뒤로 가면 된다.
내가 이 문제를 헤멘 이유는 딱 하나다.
왼쪽 방향에 대한 설정을 잘못했기 때문이다.
그냥 실수인 것이다.
이런 실수가 내 멘탈을 흔드는 것이다.
그 방향의 문제만 알았다면 문제는 11시 쯤이면 끝났을 것이다.

이런 사소한거 하나하나 놓치지 말자. 이게 실력이 되는거다.

3079번 입국심사

비어있는 곳에 n초간 사람이 들어갈 수 있고, 그 뒤 다음 사람이 
들어갈 수 있는 구조.

이렇게 되면 숫자가 매우 크기 때문에 분할하는 느낌으로 가는게 맞는 거 같은데
시간은 정렬되어있기 때문에 시간을 통한 이분 탐색은 가능한가?

이렇게 하면 되지 않을까?

시간을 기준으로 이분 탐색을 진행할건데,

학생 수의 기준은 m이 된다. 일단.

mid 값은 이 시간이 주어졌을 때, 가능한지에 대한 여부.

즉 mid / list[i] ==> 그 시간동안 통과할 수 있는 학생 수.
라고 계산을 했는데

범위가 너무 커서 long으로 바꾸면서, 동시에 곱해지는 값들도 long으로 바꿨어야하는 문제.

이게, 맨 처음에는 범위를 10^18을 최대로 잡고 했었는데 틀렸다.
근데 이게 왜 틀리는지에 대해서는 잘 모르겠다. 솔직히.
뭔가 잘못됬겠지... 싶어서 일단 고민을 해보니깐
결국 가장 최대로 들어갈 수 있는 시간은 가장 큰 시간을 소모하는 검사대에
모든 인원이 몰려가는 것이라고 생각하고, max 값을 구해서 max*m을 수행했다.
그렇게 하니깐, overflow값이 들어갈때 생겨서 이를 방지하고자, 앞에 long으로 캐스팅을 해주니
정답처리를 받았다.

아이디어를 빨리 생각해냈는데 자료형때문에 막혀서 좀 그랬음.

---------------------------------------------------------------------------------------------

3090번 차이를 최소로

내가 제일 싫어하는 유형의 문제이다.
규칙성이 있어야하는건지 아니면 전체 케이스를 다 둘러봐야하는건지도 모르겠고,
맨 먼저 생각난건 평균 값을 구한 다음 큰 수부터 값을 깎아내리는 방식이었는데,
말이 좀 안된다는 생각을 하긴 했음.

브루탈-포스로는 풀 수가 없는 문제, 그렇다고 DFS로 backtracking을 하자니 O(T) 걸려버리면
사실상 안하느니만 못한 문제.

